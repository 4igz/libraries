"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[114],{15145:function(e){e.exports=JSON.parse('{"functions":[{"name":"allFromParent","desc":"Returns an array of *all* network objects dispatched to `parent`.\\n\\n```lua\\n-- Server\\nlocal Network = require(...) \\n\\nlocal networkObject1 = Network.new(\\"Test1\\", workspace)\\nnetworkObject:append(\\"status\\", \\"not good mate\\")\\nnetworkObject:dispatch()\\n\\nlocal networkObject2 = Network.new(\\"Test2\\", workspace)\\nnetworkObject:append(\\"status\\", \\"good mate!\\")\\nnetworkObject:dispatch()\\n\\n-- Client\\nlocal Network = require(...) \\n\\nfor _, networkObject in Network.allFromParent(workspace) do\\n\\tprint(networkObject.status) \\nend\\n\\n--\x3e \\"not good mate\\"\\n--\x3e \\"good mate!\\"\\n```","params":[{"name":"parent","desc":"","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"{ [string]: { [string]: any } }\\r\\n"}],"function_type":"static","source":{"line":56,"path":"src/Network/Client/init.lua"}},{"name":"fromParent","desc":"Returns a [promise](https://eryn.io/roblox-lua-promise/) which is resolved \\n(with the network object)  once a network object of name i.e `name`, is \\nfound in `parent`.","params":[{"name":"name","desc":"","lua_type":"string"},{"name":"parent","desc":"","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"Promise<DispatchedNetworkObject: {[string]: any}>"}],"function_type":"static","source":{"line":74,"path":"src/Network/Client/init.lua"}}],"properties":[],"types":[],"name":"NetworkClient","desc":"The client counterpart of the Network module.","source":{"line":6,"path":"src/Network/Client/init.lua"}}')}}]);